services:
  api:
    build:
      context: .
      dockerfile: src/api/Dockerfile
    container_name: api_service
    ports:
      - "8000:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    env_file:
      - .env.dev
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src/api:/app/src/api
      - ./src/common:/app/src/common
      - ./logs:/logs
  bot:
    build:
      context: .
      dockerfile: src/bot/Dockerfile
    container_name: bot_service
    env_file:
      - .env.dev
    environment:
      - API_HOST=api
    depends_on:
      - api
    volumes:
      - ./src/bot:/app/src/bot
      - ./src/common:/app/src/common
      - ./logs:/logs
  db:
    image: postgres:14
    container_name: postgres_db
    restart: always
    env_file:
      - .env.dev
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./db/db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10 